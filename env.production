# ==============================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================
# ВАЖНО: Замените все значения на реальные перед деплоем!
# 
# Документация по переменным окружения:
# - Node.js: https://nodejs.org/dist/latest-v20.x/docs/api/process.html#processenv
# - NestJS Configuration: https://docs.nestjs.com/techniques/configuration
# - Prisma Environment Variables: https://www.prisma.io/docs/reference/api-reference/environment-variables-reference
#
# БЕЗОПАСНОСТЬ: Никогда не коммитьте этот файл с реальными значениями в репозиторий!
# Используйте секретные менеджеры (AWS Secrets Manager, HashiCorp Vault, Azure Key Vault)
# ==============================================

# ----------------------
# Application Settings
# ----------------------
# NODE_ENV - определяет окружение приложения
# ОБЯЗАТЕЛЬНО: должно быть 'production' для production среды
NODE_ENV=production

# PORT - порт на котором будет работать приложение
# ЗАМЕНИТЕ: на порт, выделенный для вашего приложения (обычно 80, 443 или 3000-9000)
# Примеры: 3000, 8080, 8443
PORT=3022

# API_PREFIX - префикс для всех API маршрутов
# Рекомендация: используйте версионирование, например 'api/v1'
API_PREFIX=api

# HOST - IP адрес для прослушивания
# БЕЗОПАСНОСТЬ: используйте конкретный IP в production, если возможно
# Примеры: '127.0.0.1' (только localhost), '192.168.1.100' (конкретный IP)
HOST=0.0.0.0

# ----------------------
# Database Configuration - PostgreSQL Production
# ----------------------
# Документация: https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
# Prisma Connection URL: https://www.prisma.io/docs/reference/database-reference/connection-urls
#
# Primary Database Connection with SSL and Connection Pooling
# Формат: postgresql://[user]:[password]@[host]:[port]/[database]?[params]
#
# ЗАМЕНИТЕ следующие значения:
# - estimate_prod_user: имя пользователя БД (например: app_user, estimate_service)
# - ${DB_PASSWORD}: пароль из секретного хранилища
# - production-db-host: хост БД (например: db.example.com, 10.0.0.5, rds.amazonaws.com)
# - 5432: порт PostgreSQL (обычно 5432)
# - estimate_production: имя базы данных
#
# Примеры production URL:
# - AWS RDS: postgresql://myuser:${DB_PASSWORD}@mydb.123456789012.us-east-1.rds.amazonaws.com:5432/estimate_prod
# - Google Cloud SQL: postgresql://user:${DB_PASSWORD}@/estimate_prod?host=/cloudsql/project:region:instance
# - Azure Database: postgresql://user@server:${DB_PASSWORD}@server.postgres.database.azure.com:5432/estimate_prod
# - DigitalOcean: postgresql://doadmin:${DB_PASSWORD}@db-postgresql-nyc1-12345-do-user-1234567-0.db.ondigitalocean.com:25060/defaultdb
#
# БЕЗОПАСНОСТЬ:
# - Всегда используйте SSL (sslmode=require или sslmode=verify-full)
# - Используйте переменные окружения для паролей
# - Ограничьте доступ по IP через firewall БД
# - Используйте отдельного пользователя с минимальными правами
DATABASE_URL="postgresql://estimate_prod_user:${DB_PASSWORD}@production-db-host:5432/estimate_production?schema=public&sslmode=require&pool_timeout=30&connection_limit=30&statement_timeout=30000&idle_in_transaction_session_timeout=60000&application_name=estimate-service"

# Connection Pool Settings
DATABASE_POOL_SIZE=20
DATABASE_POOL_MIN=5
DATABASE_POOL_MAX=30
DATABASE_POOL_IDLE_TIMEOUT=30000
DATABASE_POOL_ACQUIRE_TIMEOUT=30000
DATABASE_POOL_CREATE_TIMEOUT=30000
DATABASE_POOL_DESTROY_TIMEOUT=5000
DATABASE_POOL_REAP_INTERVAL=1000

# SSL Configuration
DATABASE_SSL=true
DATABASE_SSL_REJECT_UNAUTHORIZED=true
# Укажите пути к SSL сертификатам (опционально)
# DATABASE_SSL_CA=/path/to/ca-cert.pem
# DATABASE_SSL_CERT=/path/to/client-cert.pem
# DATABASE_SSL_KEY=/path/to/client-key.pem

# High Availability - Read Replicas
# Документация: https://www.postgresql.org/docs/current/high-availability.html
#
# Список read-only реплик для распределения нагрузки чтения
# ЗАМЕНИТЕ: добавьте URL ваших read-реплик
# Примеры:
# - AWS: postgresql://user:${DB_PASSWORD}@read-replica.123456789012.us-east-1.rds.amazonaws.com:5432/db
# - Multiple replicas: "postgresql://user:${DB_PASSWORD}@replica1.example.com:5432/db,postgresql://user:${DB_PASSWORD}@replica2.example.com:5432/db"
#
# РЕКОМЕНДАЦИЯ: используйте минимум 2 реплики для высокой доступности
# DATABASE_READ_REPLICAS="postgresql://user:${DB_PASSWORD}@replica1:5432/db,postgresql://user:${DB_PASSWORD}@replica2:5432/db"

# Таймаут переключения при недоступности основной БД (мс)
DATABASE_FAILOVER_TIMEOUT=5000

# Количество попыток переподключения
DATABASE_RETRY_ATTEMPTS=3

# Задержка между попытками (мс)
DATABASE_RETRY_DELAY=1000

# Performance Optimization
DATABASE_STATEMENT_TIMEOUT=30000
DATABASE_QUERY_TIMEOUT=30000
DATABASE_CONNECTION_TIMEOUT=30000
DATABASE_KEEP_ALIVE=true
DATABASE_KEEP_ALIVE_INITIAL_DELAY=10000

# Query Optimization
DATABASE_PREPARED_STATEMENTS=true
DATABASE_CACHE_PREPARED_STATEMENTS=true
DATABASE_PREPARED_STATEMENTS_CACHE_SIZE=100

# Connection Parameters
DATABASE_APPLICATION_NAME=estimate-service
DATABASE_SCHEMA=public
DATABASE_SEARCH_PATH=public
DATABASE_TIMEZONE=UTC

# Monitoring and Logging
DATABASE_LOG_QUERIES=false
DATABASE_LOG_SLOW_QUERIES=true
DATABASE_SLOW_QUERY_THRESHOLD=1000

# Prisma ORM Settings
PRISMA_LOG_LEVEL=error,warn
PRISMA_PREVIEW_FEATURES=metrics,tracing

# ----------------------
# Security & Authentication
# ----------------------
# Документация JWT: https://jwt.io/introduction/
# Best Practices: https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_for_Java_Cheat_Sheet.html
#
# JWT_SECRET - секретный ключ для подписи JWT токенов
# КРИТИЧНО: Сгенерируйте криптографически стойкий ключ!
# Команды для генерации:
# - Linux/Mac: openssl rand -base64 64
# - Node.js: node -e "console.log(require('crypto').randomBytes(64).toString('base64'))"
# - Online (НЕ для production!): https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
#
# БЕЗОПАСНОСТЬ:
# - Минимальная длина: 256 бит (32 байта)
# - Регулярно ротируйте ключи (каждые 3-6 месяцев)
# - Используйте разные ключи для разных окружений
# - Храните в секретном менеджере (AWS Secrets Manager, Vault, etc.)
JWT_SECRET=${JWT_SECRET_PROD}

# Время жизни access токена
# Рекомендации: 15m-1h для высокой безопасности, 1h-24h для удобства
JWT_EXPIRES_IN=1h

# Время жизни refresh токена
# Рекомендации: 7d-30d, в зависимости от требований безопасности
JWT_REFRESH_EXPIRES_IN=7d

# Количество раундов для bcrypt хеширования паролей
# Рекомендации: 10-14, где 12 - оптимальный баланс безопасности и производительности
# Документация: https://github.com/kelektiv/node.bcrypt.js#a-note-on-rounds
BCRYPT_ROUNDS=12

# Master API Key для административных операций
# КРИТИЧНО: используется для критических операций (миграции, админ-доступ)
# Генерация: openssl rand -hex 32
# БЕЗОПАСНОСТЬ: храните отдельно от основных credentials
MASTER_API_KEY=${MASTER_API_KEY_PROD}

# Encryption key для шифрования чувствительных данных в БД
# Используется для: персональных данных, платежной информации, токенов
# Генерация: openssl rand -base64 32
# ВАЖНО: потеря ключа = потеря зашифрованных данных!
ENCRYPTION_KEY=${ENCRYPTION_KEY_PROD}

# ----------------------
# AI Assistant (DeepSeek R1)
# ----------------------
# Документация API: https://platform.deepseek.com/docs
# Pricing: https://platform.deepseek.com/pricing
#
# API ключ от DeepSeek
# ЗАМЕНИТЕ: получите на https://platform.deepseek.com/api_keys
# БЕЗОПАСНОСТЬ: ограничьте по IP если возможно
DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY_PROD}

# Модель для использования
# Доступные: deepseek-r1, deepseek-chat, deepseek-coder
DEEPSEEK_MODEL=deepseek-r1

# Базовый URL API (может измениться для enterprise клиентов)
# Production URL: https://api.deepseek.com/v1
# Enterprise URL: https://enterprise.deepseek.com/v1
DEEPSEEK_BASE_URL=https://api.deepseek.com/v1

# Максимальное количество токенов в ответе
# Лимиты: зависят от модели, обычно 4000-8000
DEEPSEEK_MAX_TOKENS=4000

# Температура (креативность) модели: 0.0-1.0
# 0.0-0.3: детерминированные ответы
# 0.7-1.0: креативные ответы
DEEPSEEK_TEMPERATURE=0.3

# Таймаут запроса (мс)
# Рекомендация: 30000-120000 в зависимости от сложности
DEEPSEEK_TIMEOUT=60000

# ----------------------
# CORS Configuration
# ----------------------
# Документация: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
# NestJS CORS: https://docs.nestjs.com/security/cors
#
# CORS_ORIGIN - разрешенные источники
# КРИТИЧНО: замените на реальные домены!
# Примеры production доменов:
# - Один домен: https://app.example.com
# - Несколько: https://app.example.com,https://admin.example.com
# - Поддомены с regex: /^https:\/\/[\w-]+\.example\.com$/
#
# БЕЗОПАСНОСТЬ: НИКОГДА не используйте '*' в production!
CORS_ORIGIN=https://estimate.yourdomain.com,https://admin.estimate.yourdomain.com

# Разрешенные HTTP методы
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS

# Разрешить отправку cookies/credentials
# ВНИМАНИЕ: требует конкретных origins (не '*')
CORS_CREDENTIALS=true

# Время кеширования preflight запросов (сек)
# 86400 = 24 часа
CORS_MAX_AGE=86400

# ----------------------
# Rate Limiting
# ----------------------
RATE_LIMIT_TTL=60000
RATE_LIMIT_MAX=100
THROTTLE_TTL=60000
THROTTLE_LIMIT=100

# ----------------------
# Redis Cache
# ----------------------
# Документация: https://redis.io/docs/manual/security/
# Connection strings: https://www.iana.org/assignments/uri-schemes/prov/redis
#
# REDIS_URL - строка подключения к Redis
# ЗАМЕНИТЕ production-redis на реальный хост:
# - AWS ElastiCache: redis://:${REDIS_PASSWORD}@master.cache-cluster.abc123.use1.cache.amazonaws.com:6379/0
# - Redis Cloud: redis://default:${REDIS_PASSWORD}@redis-12345.c1.us-east-1-2.ec2.cloud.redislabs.com:12345/0
# - Azure Cache: redis://:${REDIS_PASSWORD}@myredis.redis.cache.windows.net:6380/0?ssl=true
#
# Формат: redis://[username]:[password]@[host]:[port]/[database]
REDIS_URL=redis://:${REDIS_PASSWORD}@production-redis:6379/0

# Использовать TLS/SSL соединение
# ОБЯЗАТЕЛЬНО для production!
REDIS_TLS=true

# Время жизни кеша по умолчанию (сек)
# 3600 = 1 час
CACHE_TTL=3600

# Максимальное количество элементов в кеше
CACHE_MAX_ITEMS=10000

# Background Jobs Redis
BULL_REDIS_URL=redis://:${REDIS_PASSWORD}@production-redis:6379/1

# ----------------------
# File Upload
# ----------------------
MAX_FILE_SIZE=10485760
UPLOAD_PATH=/app/uploads
ALLOWED_FILE_TYPES=pdf,xlsx,xls,doc,docx,xml,gsp

# ----------------------
# Logging & Monitoring
# ----------------------
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE=/app/logs/estimate-service.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=30d

# Sentry Error Tracking
# Документация: https://docs.sentry.io/platforms/node/
# Best Practices: https://docs.sentry.io/product/best-practices/
#
# SENTRY_DSN - Data Source Name для отправки ошибок
# ЗАМЕНИТЕ: получите на https://sentry.io/settings/[org]/projects/[project]/keys/
# Пример: https://abc123@o123456.ingest.sentry.io/1234567
SENTRY_DSN=${SENTRY_DSN_PROD}

# Окружение для группировки ошибок
SENTRY_ENVIRONMENT=production

# Процент трассировки транзакций (0.0-1.0)
# 0.1 = 10% транзакций
# РЕКОМЕНДАЦИЯ: 0.01-0.1 для production
SENTRY_TRACES_SAMPLE_RATE=0.1

# Prometheus Metrics
METRICS_ENABLED=true
PROMETHEUS_PORT=9090

# ----------------------
# Health Checks
# ----------------------
HEALTH_CHECK_TIMEOUT=10000
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_DB_ENABLED=true
HEALTH_CHECK_REDIS_ENABLED=true

# ----------------------
# Security Headers
# ----------------------
HELMET_ENABLED=true
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true
CSP_ENABLED=true
CSRF_ENABLED=true

# ----------------------
# Performance
# ----------------------
COMPRESSION_ENABLED=true
COMPRESSION_THRESHOLD=1024
KEEP_ALIVE_TIMEOUT=65000
WORKER_PROCESSES=auto
MAX_CONNECTIONS=1000
REQUEST_TIMEOUT=30000

# ----------------------
# External Services
# ----------------------
# Grand Smeta Integration
# Документация API: https://api.grandsmeta.ru/docs
# Поддержка: support@grandsmeta.ru
#
# API URL для интеграции с Гранд Смета
# Production: https://api.grandsmeta.ru
# Sandbox: https://sandbox.api.grandsmeta.ru
GRAND_SMETA_API_URL=https://api.grandsmeta.ru

# API ключ от Гранд Смета
# ЗАМЕНИТЕ: получите у вашего менеджера или в личном кабинете
# БЕЗОПАСНОСТЬ: запросите ограничение по IP
GRAND_SMETA_API_KEY=${GRAND_SMETA_API_KEY_PROD}

# Таймаут запросов (мс)
GRAND_SMETA_TIMEOUT=30000

# ----------------------
# API Documentation
# ----------------------
# Отключено в production по умолчанию
SWAGGER_ENABLED=false
GRAPHQL_PLAYGROUND=false
GRAPHQL_INTROSPECTION=false

# ----------------------
# Backup & Recovery
# ----------------------
# Документация: https://www.postgresql.org/docs/current/backup.html
# AWS S3: https://docs.aws.amazon.com/AmazonS3/latest/userguide/
#
# Включить автоматические бэкапы
BACKUP_ENABLED=true

# Расписание бэкапов (cron формат)
# "0 2 * * *" = каждый день в 02:00
# Примеры:
# - "0 */6 * * *" = каждые 6 часов
# - "0 2 * * 0" = каждое воскресенье в 02:00
# Cron генератор: https://crontab.guru/
BACKUP_SCHEDULE="0 2 * * *"

# Срок хранения бэкапов (дни)
# РЕКОМЕНДАЦИЯ: минимум 30 дней, оптимально 90-365
BACKUP_RETENTION_DAYS=30

# S3 bucket для хранения бэкапов
# ЗАМЕНИТЕ: создайте bucket с версионированием и шифрованием
# Примеры:
# - AWS: my-app-backups-prod
# - Для соответствия: my-app-backups-${AWS_REGION}-${AWS_ACCOUNT_ID}
BACKUP_S3_BUCKET=${BACKUP_S3_BUCKET}

# AWS регион для S3
# Примеры: us-east-1, eu-west-1, ap-southeast-1
BACKUP_S3_REGION=${BACKUP_S3_REGION}

# ----------------------
# Feature Flags
# ----------------------
FEATURE_AI_ESTIMATION=true
FEATURE_EXPORT_GRAND_SMETA=true
FEATURE_BATCH_PROCESSING=true
FEATURE_ADVANCED_ANALYTICS=true

# ----------------------
# Email Configuration (optional)
# ----------------------
# SMTP_HOST=${SMTP_HOST}
# SMTP_PORT=587
# SMTP_SECURE=true
# SMTP_USER=${SMTP_USER}
# SMTP_PASS=${SMTP_PASS}
# EMAIL_FROM=noreply@estimate.yourdomain.com

# ----------------------
# AWS Configuration (if using)
# ----------------------
# AWS_REGION=${AWS_REGION}
# AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
# AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

# ----------------------
# Docker & Container Settings
# ----------------------
# Для использования в контейнерах
CONTAINER_NAME=estimate-service
CONTAINER_MEMORY_LIMIT=2048m
CONTAINER_CPU_LIMIT=1.0

# ----------------------
# Maintenance Mode
# ----------------------
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="Сервис временно недоступен. Проводятся технические работы."

# ----------------------
# Advanced Security Settings
# ----------------------
# IP Restrictions
IP_RESTRICTIONS_ENABLED=false
# IP_WHITELIST=192.168.1.0/24,10.0.0.0/8
# IP_BLACKLIST=192.168.1.100,10.0.0.50

# API Key Management
API_KEY_ROTATION_ENABLED=true
API_KEY_ROTATION_INTERVAL=2592000000
MAX_API_KEYS_PER_USER=5
API_KEY_PREFIX=est_
API_KEY_LENGTH=32

# Brute Force Protection
BRUTE_FORCE_PROTECTION_ENABLED=true
BRUTE_FORCE_FREE_RETRIES=3
BRUTE_FORCE_MIN_WAIT=5000
BRUTE_FORCE_MAX_WAIT=900000
BRUTE_FORCE_LIFETIME=86400

# Two-Factor Authentication
TWO_FACTOR_ENABLED=false
TWO_FACTOR_ISSUER=Estimate Service
TWO_FACTOR_WINDOW=1
TWO_FACTOR_BACKUP_CODES=10

# Security Audit
SECURITY_AUDIT_ENABLED=true
SECURITY_LOG_LEVEL=info
AUDIT_LOG_RETENTION_DAYS=90

# XSS Protection
XSS_PROTECTION_ENABLED=true
XSS_PROTECTION_MODE=sanitize
XSS_WHITELIST_TAGS=b,i,u,strong,em,p,br,ul,ol,li

# Input Validation
MAX_REQUEST_SIZE=10mb
MAX_URL_LENGTH=2048
MAX_PARAMETER_COUNT=1000
MAX_JSON_DEPTH=10
MAX_JSON_KEYS=1000
MAX_ARRAY_LENGTH=1000

# Advanced File Security
ALLOWED_MIME_TYPES=application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,text/csv,application/xml
VIRUS_SCAN_ENABLED=false

# Security Monitoring
ANOMALY_DETECTION_ENABLED=true
ANOMALY_REQUESTS_THRESHOLD=1000
ANOMALY_AUTH_THRESHOLD=20
ANOMALY_IP_THRESHOLD=1000
SECURITY_ALERTS_ENABLED=true
ALERT_CHANNELS=email,slack

# Password Policy
PASSWORD_MIN_LENGTH=12
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SPECIAL=true
PASSWORD_HISTORY_COUNT=5
PASSWORD_EXPIRATION_DAYS=90

# SSRF Protection
SSRF_PROTECTION_ENABLED=true
SSRF_ALLOWED_HOSTS=api.grandsmeta.ru,api.deepseek.com

# Token Configuration
REFRESH_TOKEN_LENGTH=64
REFRESH_TOKEN_REUSE=false
REFRESH_TOKEN_MAX_AGE=604800
TEMP_TOKEN_LENGTH=32
TEMP_TOKEN_MAX_AGE=300

# WebSocket Security
WEBSOCKET_ENABLED=false
# WEBSOCKET_ORIGINS=https://estimate.yourdomain.com,https://admin.estimate.yourdomain.com
# WS_MAX_MESSAGE_SIZE=65536
# WS_HEARTBEAT_INTERVAL=30000

# Compliance
GDPR_COMPLIANCE_ENABLED=true
GDPR_DATA_RETENTION=730
PCI_COMPLIANCE_ENABLED=false

# ----------------------
# Custom Settings
# ----------------------
# Региональные коэффициенты по умолчанию
DEFAULT_REGION_CODE=77
DEFAULT_COEFFICIENT_SET=2025Q1

# Лимиты для пользователей
MAX_ESTIMATES_PER_USER=1000
MAX_ITEMS_PER_ESTIMATE=5000
MAX_CONCURRENT_EXPORTS=5

# ----------------------
# END OF CONFIGURATION
# ----------------------
