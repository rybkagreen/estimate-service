{
  "name": "estimate-service-standalone",
  "version": "1.0.0",
  "description": "–ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–º–µ—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π —Å –ì—Ä–∞–Ω–¥ –°–º–µ—Ç–∞",
  "main": "dist/services/estimate-service/main.js",
  "scripts": {
    "build": "nx build estimate-service",
    "serve": "nx serve estimate-service",
    "start": "node dist/services/estimate-service/main.js",
    "start:dev": "nx serve estimate-service",
    "start:debug": "nx serve estimate-service --inspect",
    "start:prod": "node dist/services/estimate-service/main.js",
    "test": "nx test estimate-service",
    "test:watch": "nx test estimate-service --watch",
    "test:cov": "nx test estimate-service --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "lint": "nx lint estimate-service",
    "lint:fix": "nx lint estimate-service --fix",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:deploy": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "docker:build": "docker build -t estimate-service .",
    "docker:run": "docker run -p 3022:3022 estimate-service",
    "dev:all": "concurrently \"npm run dev:mcp\" \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "nx serve estimate-frontend",
    "dev:backend": "nx serve estimate-service",
    "dev:mcp": "node mcp-server/dist-simple/index-http.js",
    "dev:mcp-stdio": "node mcp-server/dist-simple/index-local-simple.js",
    "build:all": "nx run-many -t build",
    "test:all": "nx run-many -t test",
    "lint:all": "nx run-many -t lint",
    "team:sync": "npm install && nx build mcp-server && npm run mcp:build",
    "mcp:build": "cd mcp-server && npm run build",
    "mcp:test": "cd mcp-server && node test-local.mjs",
    "mcp:start": "node mcp-server/dist-simple/index-local-simple.js",
    "mcp:start-http": "node mcp-server/dist-simple/index-http.js",
    "docs:metrics": "node scripts/docs-metrics.js",
    "docs:lint": "markdownlint docs/**/*.md README.md CHANGELOG.md CONTRIBUTING.md",
    "docs:lint:fix": "markdownlint --fix docs/**/*.md README.md CHANGELOG.md CONTRIBUTING.md",
    "docs:spell": "cspell \"docs/**/*.md\" \"*.md\" --config .cspell.json",
    "docs:links": "markdown-link-check docs/**/*.md",
    "docs:check": "npm run docs:lint && npm run docs:spell && npm run docs:links && npm run docs:metrics",
    "docs:fix": "npm run docs:lint:fix && npm run docs:metrics",
    "setup:dev": "npm run setup:hooks && npm run setup:env && npm run setup:db",
    "setup:hooks": "npx husky install",
    "setup:env": "node scripts/setup-env.js",
    "setup:db": "npm run prisma:generate && npm run prisma:migrate && npm run prisma:seed",
    "post-start": "echo 'üöÄ Development environment is ready!'",
    "copilot:check": "echo 'ü§ñ Checking Copilot configuration...' && node scripts/check-copilot.js",
    "copilot:analyze": "echo 'üìä Analyzing Copilot usage...' && node scripts/analyze-copilot.js",
    "copilot:templates": "echo 'üìù Generating Copilot templates...' && node scripts/generate-templates.js",
    "team:setup": "bash .github/setup-organization.sh",
    "team:permissions": "echo 'üîê Checking team permissions...' && node scripts/check-permissions.js",
    "team:onboard": "echo 'üë• Team onboarding...' && node scripts/team-onboard.js",
    "ai:review": "echo 'üß† Preparing for AI review...' && node scripts/prepare-ai-review.js",
    "ai:context": "echo 'üìã Generating AI context...' && node scripts/generate-ai-context.js",
    "quality:full": "npm run lint:all && npm run test:all && npm run docs:check && npm run copilot:check",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit --skipLibCheck",
    "workspace:init": "bash .github/init-copilot-workspace.sh",
    "workspace:status": "gh copilot --version && echo 'Workspace initialized successfully!'",
    "workspace:suggest": "gh copilot suggest",
    "workspace:explain": "gh copilot explain"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.0.0",
    "@prisma/client": "^5.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "clsx": "^2.1.1",
    "framer-motion": "^12.23.0",
    "lucide-react": "^0.525.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^4.6.3",
    "tailwind-merge": "^3.3.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@nx/eslint-plugin": "17.2.8",
    "@nx/jest": "^21.2.2",
    "@nx/js": "17.2.8",
    "@nx/nest": "17.2.8",
    "@nx/node": "17.2.8",
    "@nx/react": "^21.2.2",
    "@nx/webpack": "17.2.8",
    "@nx/workspace": "17.2.8",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.4.0",
    "@types/node": "~18.16.9",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "autoprefixer": "^10.4.21",
    "eslint": "~8.46.0",
    "eslint-config-prettier": "9.0.0",
    "jest": "^29.4.1",
    "nx": "17.2.8",
    "postcss": "^8.5.6",
    "prettier": "^2.6.2",
    "prisma": "^5.0.0",
    "supertest": "^6.1.3",
    "tailwindcss": "^4.1.11",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "10.9.1",
    "tsconfig-paths": "4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.2.0",
    "typescript": "~5.2.2",
    "webpack": "^5.88.0",
    "webpack-cli": "^5.1.4"
  },
  "jest": {
    "preset": "./jest.preset.js"
  },
  "copilot": {
    "workspace": true,
    "type": "nx-monorepo",
    "domain": "construction-estimation",
    "context": ".github/COPILOT_CONTEXT.md"
  }
}
