# Makefile for Estimate Service Parallel Development
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π —Å MCP —Å–µ—Ä–≤–µ—Ä–æ–º

.PHONY: help dev-all dev-frontend dev-backend dev-mcp setup clean test build

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
BLUE=\033[0;34m
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

# Default target
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(BLUE)üöÄ Estimate Service - –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞$(NC)"
	@echo "$(BLUE)================================================$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "$(GREEN)%-20s$(NC) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(YELLOW)üìù –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:$(NC)"
	@echo "  make dev-all        - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ"
	@echo "  make dev-frontend   - –¢–æ–ª—å–∫–æ frontend –∫–æ–º–∞–Ω–¥–∞"
	@echo "  make dev-backend    - –¢–æ–ª—å–∫–æ backend –∫–æ–º–∞–Ω–¥–∞"
	@echo "  make dev-mcp        - –¢–æ–ª—å–∫–æ MCP –∫–æ–º–∞–Ω–¥–∞"

# ===================
# DEVELOPMENT COMMANDS
# ===================

dev-all: ## –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	npm run dev:all

dev-frontend: ## Frontend –∫–æ–º–∞–Ω–¥–∞ - React/Vite –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "$(BLUE)üé® –ó–∞–ø—É—Å–∫ Frontend –∫–æ–º–∞–Ω–¥—ã...$(NC)"
	@echo "$(YELLOW)–ü–æ—Ä—Ç: 4200$(NC)"
	npm run dev:frontend

dev-backend: ## Backend –∫–æ–º–∞–Ω–¥–∞ - NestJS —Å–µ—Ä–≤–∏—Å
	@echo "$(BLUE)üîß –ó–∞–ø—É—Å–∫ Backend –∫–æ–º–∞–Ω–¥—ã...$(NC)"
	@echo "$(YELLOW)–ü–æ—Ä—Ç: 3022$(NC)"
	npm run dev:backend

dev-mcp: ## MCP –∫–æ–º–∞–Ω–¥–∞ - HTTP —Å–µ—Ä–≤–µ—Ä
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ MCP –∫–æ–º–∞–Ω–¥—ã...$(NC)"
	@echo "$(YELLOW)–ü–æ—Ä—Ç: 9460$(NC)"
	npm run dev:mcp

dev-mcp-stdio: ## MCP –∫–æ–º–∞–Ω–¥–∞ - STDIO —Ä–µ–∂–∏–º
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ MCP –≤ STDIO —Ä–µ–∂–∏–º–µ...$(NC)"
	npm run dev:mcp-stdio

dev-mcp-api: ## MCP –∫–æ–º–∞–Ω–¥–∞ - DeepSeek R1 —á–µ—Ä–µ–∑ Hugging Face API
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ MCP —Å DeepSeek R1 API...$(NC)"
	@echo "$(YELLOW)–¢—Ä–µ–±—É–µ—Ç: HF_TOKEN$(NC)"
	npm run dev:deepseek-api

dev-mcp-simple: ## MCP –∫–æ–º–∞–Ω–¥–∞ - –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º —ç–º—É–ª—è—Ü–∏–∏
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ MCP –≤ —Ä–µ–∂–∏–º–µ —ç–º—É–ª—è—Ü–∏–∏...$(NC)"
	npm run dev:simple

team-sync:
	@echo "üîÑ Syncing team environment..."
	git pull origin main
	npm install
	npm run build:all
	@echo "‚úÖ Team sync complete!"

# Development Commands
dev-all:
	@echo "üöÄ Starting all development services..."
	npm run dev:all

dev-frontend:
	@echo "üíª Starting frontend development..."
	npm run dev:frontend

dev-backend:
	@echo "üîß Starting backend development..."
	npm run dev:backend

dev-mcp:
	@echo "ü§ñ Starting MCP server..."
	npm run dev:mcp

dev-docker:
	@echo "üê≥ Starting development with Docker..."
	docker-compose -f docker-compose.teams.yml up -d
	@echo "‚úÖ Services started:"
	@echo "  - Frontend: http://localhost:4200"
	@echo "  - Backend: http://localhost:3333"
	@echo "  - MCP Server: http://localhost:9460"
	@echo "  - Prisma Studio: http://localhost:5555"
	@echo "  - Grafana: http://localhost:3000 (admin/admin)"

# Testing Commands
test-all:
	@echo "üß™ Running all tests..."
	npm run test:all

test-frontend:
	@echo "üß™ Running frontend tests..."
	cd apps/estimate-frontend && npm run test

test-backend:
	@echo "üß™ Running backend tests..."
	cd services/estimate-service && npm run test

test-mcp:
	@echo "üß™ Running MCP tests..."
	npm run mcp:test

test-e2e:
	@echo "üß™ Running end-to-end tests..."
	npm run test:e2e

test-mcp-api: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP —Å–µ—Ä–≤–µ—Ä–∞ —Å DeepSeek R1 API
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP —Å DeepSeek R1 API..."
	@echo "$(YELLOW)–¢—Ä–µ–±—É–µ—Ç: HF_TOKEN$(NC)"
	cd mcp-server && npm run test:api

test-mcp-local: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ MCP —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ MCP —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-server && npm run test:local

# Build Commands
build-all:
	@echo "üèóÔ∏è Building all projects..."
	npm run build:all

build-mcp:
	@echo "üèóÔ∏è Building MCP server..."
	npm run mcp:build

# Database Commands
db-setup:
	@echo "üóÑÔ∏è Setting up development database..."
	docker-compose -f docker-compose.teams.yml up postgres-dev redis-dev -d
	sleep 5
	npx prisma migrate dev --name init
	npx prisma db seed
	@echo "‚úÖ Database setup complete!"

db-reset:
	@echo "üîÑ Resetting development database..."
	npx prisma migrate reset --force
	@echo "‚úÖ Database reset complete!"

db-studio:
	@echo "üé® Opening Prisma Studio..."
	npx prisma studio

# Utility Commands
lint-all:
	@echo "üîç Linting all projects..."
	npm run lint:all

format-all:
	@echo "üé® Formatting all code..."
	npm run format

clean:
	@echo "üßπ Cleaning build artifacts..."
	rm -rf dist/
	rm -rf apps/*/dist/
	rm -rf services/*/dist/
	rm -rf mcp-server/dist*/
	rm -rf node_modules/.cache/
	@echo "‚úÖ Clean complete!"

# Team-specific commands
team-frontend:
	@echo "üíª Starting Frontend Team Environment..."
	make dev-frontend &
	make dev-mcp &
	@echo "‚úÖ Frontend team environment ready!"

team-backend:
	@echo "üîß Starting Backend Team Environment..."
	make db-setup
	make dev-backend &
	make dev-mcp &
	@echo "‚úÖ Backend team environment ready!"

team-infrastructure:
	@echo "üèóÔ∏è Starting Infrastructure Team Environment..."
	make dev-docker
	@echo "‚úÖ Infrastructure team environment ready!"

team-ai:
	@echo "ü§ñ Starting AI/MCP Team Environment..."
	make dev-mcp &
	make test-mcp
	@echo "‚úÖ AI/MCP team environment ready!"

# Stop all services
stop:
	@echo "üõë Stopping all services..."
	docker-compose -f docker-compose.teams.yml down
	pkill -f "npm run dev" || true
	pkill -f "node.*index" || true
	@echo "‚úÖ All services stopped!"

# Check service status
status:
	@echo "üìä Service Status:"
	@echo "Frontend (4200): $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:4200 || echo "‚ùå Down")"
	@echo "Backend (3333): $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:3333/health || echo "‚ùå Down")"
	@echo "MCP (9460): $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:9460/health || echo "‚ùå Down")"
	@echo "Prisma Studio (5555): $(shell curl -s -o /dev/null -w "%{http_code}" http://localhost:5555 || echo "‚ùå Down")"
