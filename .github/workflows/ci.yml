name: CI/CD Pipeline

on:
  push:
    branches: [ main, production-sync ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: estimate_service_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    - name: Generate Prisma Client
      run: npx prisma generate
    - name: Run TypeScript type check
      run: npm run type-check
    - name: Run linting
      run: npm run lint:all || true
    - name: Run unit tests
      run: npm run test:all
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/estimate_service_test
        NODE_ENV: test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    - name: Generate Prisma Client
      run: npx prisma generate
    - name: Build all services
      run: npm run build:all || echo "Build failed but continuing"
    - name: Run AI validation
      run: npm run ai:validate

    - name: Check Docker configuration
      run: test -f Dockerfile || echo "Warning: Dockerfile not found"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Deploy to production
      run: |
        echo "Deploy step would go here"
        echo "This is a placeholder for actual deployment"
